/*
 * jquery.scrolly v1.0.0-dev | (c) @ajlkn | MIT licensed
 */

(function($) {
  function calculateScrollPosition(target, options) {
      var element, offsetTop, scrollPosition;

      // Select the target element
      element = $(target);

      // If the target element doesn't exist, return null
      if (element.length == 0) return null;

      // Get the top offset of the target element
      offsetTop = element.offset().top;

      // Calculate scroll position based on the anchor option
      switch (options.anchor) {
          case "middle":
              // Scroll to the middle of the element
              scrollPosition = offsetTop - ($(window).height() - element.outerHeight()) / 2;
              break;

          default:
          case "top":
              // Scroll to the top of the element
              scrollPosition = Math.max(offsetTop, 0);
              break;
      }

      // Adjust scroll position based on the offset option
      if (typeof options.offset == "function") {
          scrollPosition -= options.offset();
      } else {
          scrollPosition -= options.offset;
      }

      return scrollPosition;
  }

  var LENGTH = "length";
  var NO_POSITION = null;
  var TOP = "top";
  var OFFSET = "offset";
  var CLICK_SCROLLY = "click.scrolly";
  var $window = $(window);

  $.fn.scrolly = function(options) {
      var element, scrollPosition, href, settings;

      // If there are no elements selected, return the jQuery object
      if (this[LENGTH] == 0) return this;

      // If there are multiple elements selected, apply scrolly to each one
      if (this[LENGTH] > 1) {
          for (var i = 0; i < this[LENGTH]; i++) {
              $(this[i]).scrolly(options);
          }
          return this;
      }

      // Set default scroll position to null
      scrollPosition = NO_POSITION;

      // Get the href attribute value
      href = this.attr("href");

      // If href is not a valid anchor, return the jQuery object
      if (href.charAt(0) != "#" || href[LENGTH] < 2) return this;

      // Extend the default options with user-provided options
      settings = $.extend({
          anchor: TOP,
          easing: "swing",
          offset: 0,
          parent: $("body,html"),
          pollOnce: false,
          speed: 1000
      }, options);

      // Calculate scroll position once if pollOnce is true
      if (settings.pollOnce) {
          scrollPosition = calculateScrollPosition(href, settings);
      }

      // Attach a click event listener to trigger the scroll animation
      this.off(CLICK_SCROLLY).on(CLICK_SCROLLY, function(event) {
          var targetScrollPosition = scrollPosition !== NO_POSITION ? scrollPosition : calculateScrollPosition(href, settings);

          if (targetScrollPosition !== NO_POSITION) {
              event.preventDefault();
              settings.parent.stop().animate({ scrollTop: targetScrollPosition }, settings.speed, settings.easing);
          }
      });

      return this;
  };
})(jQuery);
